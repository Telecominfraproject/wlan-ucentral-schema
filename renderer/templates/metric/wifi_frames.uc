# generated by wifi_frames.uc

{%
// Helper functions

function has_wifi_frames_config(wifi_frames) {
    return wifi_frames;
}

function has_wifi_filters(wifi_frames) {
    return wifi_frames?.filters && length(wifi_frames.filters) > 0;
}

function get_wifi_filters(wifi_frames) {
    return wifi_frames?.filters || [];
}

// Generation functions

function generate_wifi_event_base(output) {
    uci_set_string(output, 'event.wifi', 'event');
    uci_set_string(output, 'event.wifi.type', 'wifi');
}

function generate_wifi_filters(output, wifi_frames) {
    let filters = get_wifi_filters(wifi_frames);
    
    if (length(filters) <= 0) {
        // No filters specified, use wildcard
        uci_set_string(output, 'event.wifi.filter', '*');
    } else {
        // First filter uses set, subsequent use add_list
        for (let i, filter in filters) {
            if (i == 0) {
                uci_set_string(output, 'event.wifi.filter', filter);
            } else {
                uci_list_string(output, 'event.wifi.filter', filter);
            }
        }
    }
}

function generate_wifi_frames_config(wifi_frames) {
    if (!has_wifi_frames_config(wifi_frames)) return '';
    
    let output = [];
    uci_comment(output, '# Wifi-frame reporting configuration');
    
    generate_wifi_event_base(output);
    generate_wifi_filters(output, wifi_frames);
    
    return uci_output(output);
}

// Main template execution

print(generate_wifi_frames_config(wifi_frames));
%}
