# generated by telemetry.uc

{%
// Helper functions

function has_telemetry_config(telemetry) {
    return telemetry && telemetry.interval;
}

function has_telemetry_types(telemetry) {
    return telemetry?.types && length(telemetry.types) > 0;
}

function has_valid_events(telemetry, events) {
    if (!has_telemetry_types(telemetry)) return false;
    
    for (let type in telemetry.types) {
        if (type in events) {
            return true;
        }
    }
    return false;
}

function get_telemetry_interval(telemetry) {
    return telemetry?.interval || 300;  // Default reasonable interval
}

function get_valid_event_types(telemetry, events) {
    let valid_types = [];
    
    if (!has_telemetry_types(telemetry)) return valid_types;
    
    for (let type in telemetry.types) {
        if (type in events) {
            push(valid_types, type);
        }
    }
    
    return valid_types;
}

// Generation functions

function generate_telemetry_config(telemetry, events) {
    if (!has_telemetry_config(telemetry)) return '';
    
    let output = [];
    uci_comment(output, '# Telemetry streaming configuration');
    
    uci_set_number(output, 'event.bulk.interval', get_telemetry_interval(telemetry));
    
    let valid_types = get_valid_event_types(telemetry, events);
    for (let type in valid_types) {
        uci_list_string(output, 'event.bulk.filter', type);
    }
    
    return uci_output(output);
}

// Main template execution

print(generate_telemetry_config(telemetry, events));
%}
