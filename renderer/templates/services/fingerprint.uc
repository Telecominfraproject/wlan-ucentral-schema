{%
	// Helper functions
	function has_fingerprint_service() {
		return services.is_present("ufp");
	}

	function has_fingerprint_config() {
		return state.services?.fingerprint;
	}

	// Configuration generation functions
	function generate_fingerprint_config() {
		if (!has_fingerprint_service())
			return '';

		let enable = has_fingerprint_config();
		services.set_enabled("ufp", enable);

		if (!enable)
			return '';

		let output = [];

		uci_comment(output, '# generated by fingerprint.uc');
		uci_comment(output, '### generate fingerprint configuration');
		uci_set_string(output, 'state.fingerprint', 'fingerprint');
		uci_set_string(output, 'state.fingerprint.mode', state.services.fingerprint.mode);
		uci_set_string(output, 'state.fingerprint.min_age', state.services.fingerprint.minimum_age);
		uci_set_string(output, 'state.fingerprint.max_age', state.services.fingerprint.maximum_age);
		uci_set_string(output, 'state.fingerprint.period', state.services.fingerprint.periodicity);
		uci_set_boolean(output, 'state.fingerprint.allow_wan', state.services.fingerprint.allow_wan);

		return uci_output(output);
	}
%}

{{ generate_fingerprint_config() }}