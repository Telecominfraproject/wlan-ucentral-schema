{%
	// Helper functions
	function has_online_check_service() {
		return services.is_present("onlinecheck");
	}

	function has_online_check_config() {
		return length(online_check) > 0;
	}

	function has_ping_hosts() {
		return online_check.ping_hosts && length(online_check.ping_hosts) > 0;
	}

	function has_download_hosts() {
		return online_check.download_hosts && length(online_check.download_hosts) > 0;
	}

	function is_enabled() {
		return has_online_check_service() && has_online_check_config() && (has_ping_hosts() || has_download_hosts());
	}

	// Configuration generation functions
	function generate_online_check_config() {
		let enable = is_enabled();

		services.set_enabled("onlinecheck", enable);

		if (!enable)
			return '';

		let output = [];

		uci_comment(output, '# generated by online_check.uc');
		uci_comment(output, '### generate online check service configuration');
		uci_section(output, 'onlinecheck config');
		uci_set_string(output, 'onlinecheck.@config[-1].check_interval', online_check.check_interval);
		uci_set_string(output, 'onlinecheck.@config[-1].check_threshold', online_check.check_threshold);

		if (online_check.action) {
			for (let action in online_check.action) {
				uci_list_string(output, 'onlinecheck.@config[-1].action', action);
			}
		}

		if (has_ping_hosts()) {
			for (let host in online_check.ping_hosts) {
				uci_list_string(output, 'onlinecheck.@config[-1].ping_hosts', host);
			}
		}

		if (has_download_hosts()) {
			for (let host in online_check.download_hosts) {
				uci_list_string(output, 'onlinecheck.@config[-1].download_hosts', host);
			}
		}

		return uci_output(output);
	}
%}

{{ generate_online_check_config() }}